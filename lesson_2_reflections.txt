What happens when you initialize a repository? Why do you need to do it?

Initializing a repository creates a .git directory with associated files to setup the directory as
a repository.  You need it to setup the commit history setup.

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area will have less less files than working directory or repository.  It allows us to add files separately to respository so we can have clearer commits.

How can you use the staging area to make sure you have one commit per logical change?

I can add one file at a time to the staging area and then commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches would be useful for keep tracking of specific versions we like, for example an experimental feature which should not be in the master branch.  

How do the diagrams help you visualize the branch structure?

It allows me to see how it structures and changes as branches are added.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The result of merging two branches together creates new files with changes from both branches.  It is represented the way in the diagram to show how parent child nodes change

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

Pro is it takes the grunt work of merging away.  Con is it may not always work due to conflicts
